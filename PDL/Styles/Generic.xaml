<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PDL">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <!-- General button -->
    <Style TargetType="{x:Type Button}" x:Key="PDLButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource UIDarkBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                            CornerRadius="3">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource UIButtonHighlightBrush}" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource UIVeryLightBrush}" />
                <Setter Property="Foreground" Value="{StaticResource UIDisabledTextBrush}" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderThickness="1" BorderBrush="{StaticResource UILightBrush}">
                                <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                                        CornerRadius="3">
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- Checkbox -->
    <Style TargetType="{x:Type CheckBox}" x:Key="PDLCheckBox">
        <Setter Property="Background" Value="{StaticResource UIDarkBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource UIDarkBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource UIVeryLightBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource UIVeryLightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- ProgressBar -->
    <Style TargetType="{x:Type ProgressBar}" x:Key="PDLProgressbar">
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="Maximum" Value="100"/>
        <Setter Property="Foreground"  Value="{StaticResource SC_BlueBrush}"/>
        <Setter Property="Background"  Value="{StaticResource UIDarkBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource UIDarkBrush}"/>
    </Style>

    <!-- ListView -->
    <Style TargetType="{x:Type ListView}" x:Key="PDLListView">
        <Setter Property="Background"  Value="{StaticResource UIDarkBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource UIDarkBrush}" />
    </Style>

    <!-- ListView Item -->
    <Style TargetType="{x:Type ListViewItem}" x:Key="PDLListViewItem">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource UIVeryLightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>