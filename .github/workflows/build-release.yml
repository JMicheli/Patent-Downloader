name: Build release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:

  # Build the application
  build-prod:
    runs-on: windows-latest
    
    env:
      Solution_Path: PDL4.sln
      PDL_Project_Path: PDL4\PDL4.csproj

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Install the .NET Core workload (see https://github.com/actions/setup-dotnet)
      - name: Install .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'

        # Add  MsBuild to the PATH: (see https://github.com/microsoft/setup-msbuild)
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.1
      
      # Restore the application
      - name:  Restore the WPF application to populate the obj folder
        run: msbuild $env:Solution_Path /t:Restore /p:Configuration=$env:Configuration
        env:
          Configuration: Release

      # Build the solution
      - name: Build for production
        run: msbuild $env:Solution_Path /p:Configuration=$env:Configuration
        env:
          Configuration: Release

      # Upload artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: prod-artifact
          path: PDL4/bin/Release/
  
  # Release the application
  release:
    needs: build-prod
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false 
          prerelease: true
          release_name: ${{ github.ref }}
          tag_name: release-${{ github.sha }}
          body_path: CHANGELOG.md

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: prod-artifact
          path: artifact/

      - name: Upload release artifact
        uses: actions/upload-release-asset@v1
        id: upload-release-asset 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /artifact/prod-artifact.zip
          asset_name: Patent-Downloader${{ github.ref }}.zip
          asset_content_type: application/zip
